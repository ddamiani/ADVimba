# Database for the records specific to the ADVimba driver
# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout, default 1
#% macro, ADDR, Asyn Port address, default 0

include "ADGenICam.template"

record(bo, "$(P)$(R)TimeStampMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT) 0)VMB_TIME_STAMP_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "EPICS")
}

record(bi, "$(P)$(R)TimeStampMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)VMB_TIME_STAMP_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "EPICS")
   field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)UniqueIdMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT) 0)VMB_UNIQUE_ID_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "Driver")
}

record(bi, "$(P)$(R)UniqueIdMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)VMB_UNIQUE_ID_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "Driver")
   field(SCAN, "I/O Intr")
}

## Convert pixel format
record(mbbo, "$(P)$(R)ConvertPixelFormat") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ZRST, "None")
  field(ONVL, "1")
  field(ONST, "Mono8")
  field(TWVL, "2")
  field(TWST, "Mono16")
  field(THVL, "3")
  field(THST, "RGB8")
  field(FRVL, "4")
  field(FRST, "RGB16")
  field(OUT,  "@asyn($(PORT) 0)VMB_CONVERT_PIXEL_FORMAT")
}

record(mbbi, "$(P)$(R)ConvertPixelFormat_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ZRST, "None")
  field(ONVL, "1")
  field(ONST, "Mono8")
  field(TWVL, "2")
  field(TWST, "Mono16")
  field(THVL, "3")
  field(THST, "RGB8")
  field(FRVL, "4")
  field(FRST, "RGB16")
  field(INP,  "@asyn($(PORT) 0)VMB_CONVERT_PIXEL_FORMAT")
}

# GigE statistics
record(longin, "$(P)$(R)GC_StatFrameDelivered_RBV") {
  field(DTYP, "asynInt64")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))GC_I_StatFrameDelivered")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
  info(autosaveFields, "DESC LOLO LOW HIGH HIHI LLSV LSV HSV HHSV EGU TSE")
}

record(longin, "$(P)$(R)GC_StatFrameDropped_RBV") {
  field(DTYP, "asynInt64")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))GC_I_StatFrameDropped")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
  info(autosaveFields, "DESC LOLO LOW HIGH HIHI LLSV LSV HSV HHSV EGU TSE")
}

record(longin, "$(P)$(R)GC_StatFrameUnderrun_RBV") {
  field(DTYP, "asynInt64")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))GC_I_StatFrameUnderrun")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
  info(autosaveFields, "DESC LOLO LOW HIGH HIHI LLSV LSV HSV HHSV EGU TSE")
}

record(longin, "$(P)$(R)GC_StatPacketErrors_RBV") {
  field(DTYP, "asynInt64")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))GC_I_StatPacketErrors")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
  info(autosaveFields, "DESC LOLO LOW HIGH HIHI LLSV LSV HSV HHSV EGU TSE")
}

record(longin, "$(P)$(R)GC_StatPacketMissed_RBV") {
  field(DTYP, "asynInt64")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))GC_I_StatPacketMissed")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
  info(autosaveFields, "DESC LOLO LOW HIGH HIHI LLSV LSV HSV HHSV EGU TSE")
}

record(longin, "$(P)$(R)GC_StatPacketReceived_RBV") {
  field(DTYP, "asynInt64")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))GC_I_StatPacketReceived")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
  info(autosaveFields, "DESC LOLO LOW HIGH HIHI LLSV LSV HSV HHSV EGU TSE")
}

record(longin, "$(P)$(R)GC_StatPacketRequested_RBV") {
  field(DTYP, "asynInt64")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))GC_I_StatPacketRequested")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
  info(autosaveFields, "DESC LOLO LOW HIGH HIHI LLSV LSV HSV HHSV EGU TSE")
}

record(longin, "$(P)$(R)GC_StatPacketResent_RBV") {
  field(DTYP, "asynInt64")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))GC_I_StatPacketResent")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
  info(autosaveFields, "DESC LOLO LOW HIGH HIHI LLSV LSV HSV HHSV EGU TSE")
}

record(mbbi, "$(P)$(R)GC_StreamType_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))GC_E_StreamType")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
  info(autosaveFields, "DESC ZRSV ONSV TWSV THSV FRSV FVSV SXSV SVSV EISV NISV TESV ELSV TVSV TTSV FTSV FFSV TSE")
}

# These are totally bogus and copied from the aravisGige.
# TBD - Fix this!!
record( ao, "$(P)$(R)XmitRate" )
{
    field( DOL,  "125e6" )
    field( EGU,  "Bytes/Sec" )
    field( PREC, "3" )
    field( PINI, "YES" )
    info( autosaveFields, "VAL" )
}   

record( ao, "$(P)$(R)CamProcDelay" )
{
    field( DOL,  "10e-3" )
    field( EGU,  "Sec" )
    field( PREC, "3" ) 
    field( PINI, "YES" )
    info( autosaveFields, "VAL" )
}   

# vimba DataType Enumerations
# Int8=0, UInt8=1, Int16=2, UInt16=3
record( calc, "$(P)$(R)XmitDelay" )
{
    field( INPA, "$(P)$(R)ArraySize_RBV CP MS" )
    field( INPB, "$(P)$(R)XmitRate CPP MS" )
    field( INPC, "$(P)$(R)CamProcDelay CPP MS" )
    field( INPD, "$(P)$(R)DataType_RBV CPP MS" )
    field( CALC, "(D&2)*A/B+C" )
    field( EGU,  "Sec" )
    field( PREC, "4" )
}   

record( ao, "$(P)$(R)DriverProcDelay" )
{
    field( DOL,  "1.0e-6" )
    field( EGU,  "Sec" )
    field( PREC, "3" ) 
    field( PINI, "YES" )
    info( autosaveFields, "VAL" )
}   

#
# TrigToTS_Calc: Calculates expected delay from trigger to timeStamp update 
# Inputs: All units in seconds
#   A   - Camera acquire time (exposure length)
#   B   - Camera image transmission time
#   C   - Estimated driver processing delay before requesting timestamp
record( calc, "$(P)$(R)TrigToTS_Calc" )
{
    field( INPA, "$(P)$(R)AcquireTime_RBV CP MS" )
    field( INPB, "$(P)$(R)XmitDelay CP MS" )
    field( INPC, "$(P)$(R)DriverProcDelay CP MS" )
    field( CALC, "A+B+C" )
    field( EGU,  "sec" )
    field( PREC, "5" ) 
}

#
# Try to make initial setup easier with one Big Red Button(tm).
#
record(seq, "$(P)$(R)InitSettings") {
    field(SELM, "All")
    field(DOL0, "0")
    field(LNK0, "$(P)$(R)Acquire PP")
    field(DLY1, "3")
    field(DOL1, "1")
    field(LNK1, "$(P)$(R)FrameRateEnable PP")
    field(DLY2, "2")
    field(DOL2, "3")
    field(LNK2, "$(P)$(R)GC_TriggerSelector PP")
    field(DOL3, "0")
    field(LNK3, "$(P)$(R)GC_LineSelector PP")
    field(DLY4, "1")
    field(DOL4, "0")
    field(LNK4, "$(P)$(R)GC_LineMode PP")
    field(DOL5, "1")
    field(LNK5, "$(P)$(R)TriggerSource PP")
    field(DOL6, "2")
    field(LNK6, "$(P)$(R)ImageMode PP")
    field(DOL7, "1")
    field(LNK7, "$(P)$(R)TriggerMode PP")
    field(DOL8, "0.1")
    field(LNK8, "$(P)$(R)AcquirePeriod PP")
    field(DOL9, "0.0")
    field(LNK9, "$(P)$(R)CamTrigDelay PP")
}